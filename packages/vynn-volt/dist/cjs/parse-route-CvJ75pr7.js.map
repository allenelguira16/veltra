{"version":3,"file":"parse-route-CvJ75pr7.js","sources":["../../src/parse-route.tsx"],"sourcesContent":["import fileRoutes, { RouteModule } from \"vinxi/routes\";\nimport { JSX } from \"vynn\";\nimport { Route } from \"vynn-router\";\n\nfunction buildRouteTree() {\n  function buildNode(route: RouteModule, all: RouteModule[]): Route {\n    const $layout = route.$$layout;\n    const $component = route.$$component;\n\n    const Layout: (() => JSX.Element) | undefined = $layout?.require().default;\n    const Component: (() => JSX.Element) | undefined = $component?.require().default;\n\n    // always create a node for the route (parent grouping)\n    const node: Route = {\n      path: route.path,\n      children: [],\n    };\n\n    // find direct children (one level deeper)\n    const directChildren = all.filter((r) => {\n      if (r.path === route.path) return false;\n      if (!r.path.startsWith(route.path === \"/\" ? \"/\" : route.path + \"/\")) return false;\n\n      const rest = r.path.slice(route.path === \"/\" ? 1 : route.path.length + 1);\n      return !rest.includes(\"/\");\n    });\n\n    // If there's a layout -> parent must render the layout (keeps Outlet)\n    if (Layout) {\n      node.component = Layout;\n      // if there's also a page component (page + layout), nest it at \"/\"\n      if (Component) {\n        node.children!.push({\n          path: \"/\",\n          component: Component,\n        });\n      }\n    } else {\n      // No layout:\n      // - If there's a component and NO direct children => leaf route: parent becomes that component\n      // - If there's a component and there ARE direct children => move the component into children as \"/\"\n      if (Component) {\n        if (directChildren.length === 0) {\n          node.component = Component;\n        } else {\n          // Move page into children as \"/\"\n          node.children!.push({\n            path: \"/\",\n            component: Component,\n          });\n        }\n      }\n      // If no component and no layout -> parent is just a grouping node (no component)\n    }\n\n    // Recurse direct children and normalize child paths relative to parent\n    for (const child of directChildren) {\n      const childNode = buildNode(child, all);\n\n      // childNode.path is absolute (e.g. \"/test/test\").\n      // We want it relative to parent:\n      // - if equal to parent => \"/\"\n      // - else remove parent prefix + slash and prepend \"/\"\n      if (childNode.path === route.path) {\n        childNode.path = \"/\";\n      } else {\n        // compute slice index: for root parent \"/\" slice from 1, else route.path.length + 1\n        const baseIndex = route.path === \"/\" ? 1 : route.path.length + 1;\n        const rest = childNode.path.slice(baseIndex);\n        childNode.path = rest === \"\" ? \"/\" : \"/\" + rest;\n      }\n\n      node.children!.push(childNode);\n    }\n\n    if (node.children && node.children.length === 0) delete node.children;\n\n    return node;\n  }\n\n  const rootDef = fileRoutes.find((r) => r.path === \"/\");\n  if (!rootDef) throw new Error(\"Missing root /\");\n\n  return [buildNode(rootDef, fileRoutes)];\n}\n\nexport const routes = buildRouteTree();\n"],"names":["buildRouteTree","buildNode","route","all","$layout","$$layout","$component","$$component","Layout","require","default","Component","node","path","children","directChildren","filter","r","startsWith","slice","length","includes","component","push","child","childNode","baseIndex","rest","rootDef","fileRoutes","find","Error","routes"],"mappings":"2CAIA,SAASA,GAAiB,CACxB,SAASC,EAAUC,EAAoBC,EAA2B,CAChE,MAAMC,EAAUF,EAAMG,SAChBC,EAAaJ,EAAMK,YAEnBC,EAA0CJ,GAASK,UAAUC,QAC7DC,EAA6CL,GAAYG,QAAAA,EAAUC,QAGnEE,EAAc,CAClBC,KAAMX,EAAMW,KACZC,SAAU,CAAA,CACZ,EAGMC,EAAiBZ,EAAIa,OAAQC,GAC7BA,EAAEJ,OAASX,EAAMW,MACjB,CAACI,EAAEJ,KAAKK,WAAWhB,EAAMW,OAAS,IAAM,IAAMX,EAAMW,KAAO,GAAG,EAAU,GAGrE,CADMI,EAAEJ,KAAKM,MAAMjB,EAAMW,OAAS,IAAM,EAAIX,EAAMW,KAAKO,OAAS,CAAC,EAC3DC,SAAS,GAAG,CAC1B,EAGGb,GACFI,EAAKU,UAAYd,EAEbG,GACFC,EAAKE,SAAUS,KAAK,CAClBV,KAAM,IACNS,UAAWX,CACb,CAAC,GAMCA,IACEI,EAAeK,SAAW,EAC5BR,EAAKU,UAAYX,EAGjBC,EAAKE,SAAUS,KAAK,CAClBV,KAAM,IACNS,UAAWX,CACb,CAAC,GAOP,UAAWa,KAAST,EAAgB,CAClC,MAAMU,EAAYxB,EAAUuB,EAAOrB,CAAG,EAMtC,GAAIsB,EAAUZ,OAASX,EAAMW,KAC3BY,EAAUZ,KAAO,QACZ,CAEL,MAAMa,EAAYxB,EAAMW,OAAS,IAAM,EAAIX,EAAMW,KAAKO,OAAS,EACzDO,EAAOF,EAAUZ,KAAKM,MAAMO,CAAS,EAC3CD,EAAUZ,KAAOc,IAAS,GAAK,IAAM,IAAMA,CAC7C,CAEAf,EAAKE,SAAUS,KAAKE,CAAS,CAC/B,CAEA,OAAIb,EAAKE,UAAYF,EAAKE,SAASM,SAAW,GAAG,OAAOR,EAAKE,SAEtDF,CACT,CAEA,MAAMgB,EAAUC,EAAWC,KAAMb,GAAMA,EAAEJ,OAAS,GAAG,EACrD,GAAI,CAACe,EAAS,MAAM,IAAIG,MAAM,gBAAgB,EAE9C,MAAO,CAAC9B,EAAU2B,EAASC,CAAU,CAAC,CACxC,CAEO,MAAMG,EAAShC,EAAAA"}