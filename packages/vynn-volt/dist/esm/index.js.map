{"version":3,"file":"index.js","sources":["../../src/file-system-router.ts","../../src/define-config.ts"],"sourcesContent":["import fs from \"node:fs\";\n\nimport path from \"path\";\nimport { AppOptions, RouterSchemaInput } from \"vinxi\";\nimport { BaseFileSystemRouter, cleanPath } from \"vinxi/fs-router\";\n\nclass VynnFileSystemRouter extends BaseFileSystemRouter {\n  toPath(filePath: string) {\n    // only treat \"page.tsx/ts/jsx/js\" as routes\n    if (!/page\\.(t|j)sx?$/.test(path.basename(filePath))) {\n      return \"\";\n    }\n\n    const routePath = cleanPath(filePath, this.config)\n      .replace(/\\/page$/, \"\") // remove trailing /page\n      .replace(/\\[([^/]+)\\]/g, (_, m) => {\n        if (m.startsWith(\"...\")) return `*${m.slice(3)}`;\n        return `:${m}`;\n      });\n\n    return routePath?.length > 0 ? `${routePath}` : \"/\";\n  }\n\n  toRoute(filePath: string) {\n    const routePath = this.toPath(filePath);\n    if (!routePath) return null; // skip non-page files\n\n    const dir = path.dirname(filePath);\n    const layoutFilePath = path.join(dir, \"layout.tsx\");\n\n    return {\n      $$component: {\n        src: filePath,\n        pick: [\"default\"],\n      },\n      ...(fs.existsSync(layoutFilePath)\n        ? {\n            $$layout: {\n              src: layoutFilePath,\n              pick: [\"default\"],\n            },\n          }\n        : {}),\n      path: routePath,\n      filePath,\n    };\n  }\n}\n\ntype RouterOptions = {\n  dir: string;\n};\n\nexport function fileSystemRouter({ dir }: RouterOptions) {\n  return (router: RouterSchemaInput, app: AppOptions) => {\n    console.log(dir);\n\n    return new VynnFileSystemRouter(\n      {\n        dir,\n        extensions: [\"tsx\", \"ts\", \"jsx\", \"js\"],\n      },\n      router,\n      app,\n    );\n  };\n}\n","// @ts-expect-error no type\nimport { serverFunctions } from \"@vinxi/server-functions/plugin\";\nimport path from \"path\";\nimport { AppOptions, createApp } from \"vinxi\";\nimport { PluginOption } from \"vite\";\nimport vynn from \"vite-plugin-vynn\";\nimport tsconfigPaths from \"vite-tsconfig-paths\";\n\nimport { fileSystemRouter } from \"./file-system-router\";\n\ntype DefineConfig = {\n  plugins: PluginOption[];\n  server?: AppOptions[\"server\"];\n};\n\nexport function defineConfig({ plugins, server = {} }: DefineConfig) {\n  const rootDir = process.cwd();\n  return createApp({\n    devtools: true,\n    server: {\n      compressPublicAssets: {\n        brotli: process.versions.bun ? false : true,\n      },\n      ...server,\n    },\n    routers: [\n      {\n        name: \"public\",\n        type: \"static\",\n        dir: path.resolve(rootDir, \"./public\"),\n        base: \"/\",\n      },\n      {\n        name: \"ssr\",\n        type: \"http\",\n        base: \"/\",\n        target: \"server\",\n        handler: path.resolve(rootDir, \"./src/entry-server.tsx\"),\n        plugins: () => [vynn({ ssr: true }), tsconfigPaths(), ...plugins],\n        routes: fileSystemRouter({ dir: path.resolve(rootDir, \"./src/app\") }),\n        link: {\n          client: \"client\",\n        },\n      },\n      {\n        name: \"client\",\n        type: \"client\",\n        base: \"/_build\",\n        target: \"browser\",\n        handler: path.resolve(rootDir, \"./src/entry-client.tsx\"),\n        plugins: () => [serverFunctions.client(), vynn({ ssr: true }), tsconfigPaths(), ...plugins],\n        routes: fileSystemRouter({ dir: path.resolve(rootDir, \"./src/app\") }),\n      },\n      serverFunctions.router({ plugins: () => [tsconfigPaths()] }),\n    ],\n  });\n}\n"],"names":["VynnFileSystemRouter","BaseFileSystemRouter","toPath","filePath","test","path","basename","routePath","cleanPath","config","replace","_","m","startsWith","slice","length","toRoute","dir","dirname","layoutFilePath","join","$$component","src","pick","fs","existsSync","$$layout","fileSystemRouter","router","app","console","log","extensions","defineConfig","plugins","server","rootDir","process","cwd","createApp","devtools","compressPublicAssets","brotli","versions","bun","routers","name","type","resolve","base","target","handler","vynn","ssr","tsconfigPaths","routes","link","client","serverFunctions"],"mappings":"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"}