{"version":3,"file":"server.js","sources":["../../src/server.tsx"],"sourcesContent":["/// <reference types=\"vinxi/types/server\" />\n\nimport pretty from \"pretty\";\nimport { eventHandler } from \"vinxi/http\";\nimport { getManifest } from \"vinxi/manifest\";\nimport { JSX } from \"vynn\";\nimport { renderToString } from \"vynn/server\";\nimport { Router } from \"vynn-router\";\n\nimport { routes } from \"./parse-route\";\n\n// import Root from \"./root\";\n\nexport let Assets: () => JSX.Element;\nexport let Scripts: () => JSX.Element;\nexport let VynnApp: () => JSX.Element;\n\nexport function createServer(Root: () => JSX.Element) {\n  return eventHandler(async (event) => {\n    // const Root = (await import(/* @vite-ignore */ path.resolve(process.cwd(), \"./src/_app.tsx\")))\n    //   .default;\n\n    const clientManifest = getManifest(\"client\");\n\n    const rawAssets = await clientManifest.inputs[clientManifest.handler].assets();\n\n    type Assets = ((typeof rawAssets)[number] & { children: string })[];\n    Assets = () =>\n      (rawAssets as Assets).map(({ tag: Tag, attrs, children }) => (\n        <Tag {...attrs}>{children}</Tag>\n      ));\n\n    Scripts = () => [\n      <script html={`window.manifest = ${JSON.stringify(clientManifest.json())}`} />,\n      <script type=\"module\" src={clientManifest.inputs[clientManifest.handler].output.path} />,\n    ];\n\n    VynnApp = () => (\n      <div id=\"app\">\n        <Router url={event.path} routes={routes} />\n      </div>\n    );\n\n    const html = \"<!doctype html>\" + renderToString(() => <Root />);\n\n    if (import.meta.env.PROD) return html;\n\n    return pretty(html, { ocd: true });\n  });\n}\n"],"names":["Assets","Scripts","VynnApp","createServer","Root","eventHandler","event","clientManifest","getManifest","rawAssets","inputs","handler","assets","map","tag","Tag","attrs","children","_jsx","html","JSON","stringify","json","type","src","output","path","id","Router","url","routes","renderToString","import","env","PROD","pretty","ocd"],"mappings":";;;;;;;;;AAaO,IAAIA;AACJ,IAAIC;AACJ,IAAIC;AAEJ,SAASC,aAAaC,IAAAA,EAAyB;AACpD,EAAA,OAAOC,YAAAA,CAAa,OAAOC,KAAAA,KAAU;AAInC,IAAA,MAAMC,cAAAA,GAAiBC,YAAY,QAAQ,CAAA;AAE3C,IAAA,MAAMC,YAAY,MAAMF,cAAAA,CAAeG,OAAOH,cAAAA,CAAeI,OAAO,EAAEC,MAAAA,EAAO;AAG7EZ,IAAAA,MAAAA,GAASA,MACNS,SAAAA,CAAqBI,GAAAA,CAAI,CAAC;AAAA,MAAEC,GAAAA,EAAKC,GAAAA;AAAAA,MAAKC,KAAAA;AAAAA,MAAOC;AAAAA,KAAS,KACrDC,IAACH,GAAAA,EAAG;AAAA,MAAA,GAAKC,KAAAA;AAAAA,MAAKC,UAAAA,MAAGA;AAAAA,KAAc,CAChC,CAAA;AAEHhB,IAAAA,OAAAA,GAAUA,MAAM,CACdiB,GAAAA,CAAA,QAAA,EAAA;AAAA,MAAAC,IAAAA,EAAAA,MAAc,CAAA,kBAAA,EAAqBC,IAAAA,CAAKC,UAAUd,cAAAA,CAAee,IAAAA,EAAM,CAAC,CAAA;AAAA,KAAK,CAAA,EAC7EJ,GAAAA,CAAA,QAAA,EAAA;AAAA,MAAAK,MAAAA,MAAa,QAAA;AAAA,MAAQC,KAAAA,MAAMjB,cAAAA,CAAeG,OAAOH,cAAAA,CAAeI,OAAO,EAAEc,MAAAA,CAAOC;AAAAA,KAAO,CAAC,CAAA;AAG1FxB,IAAAA,OAAAA,GAAUA,MACRgB,IAAA,KAAA,EAAA;AAAA,MAAAS,IAAAA,MAAQ,KAAA;AAAA,MAAKV,QAAAA,EAAAA,MACXC,GAAAA,CAACU,MAAAA,EAAM;AAAA,QAAAC,GAAAA,EAAAA,MAAMvB,KAAAA,CAAMoB,IAAAA;AAAAA,QAAII,QAAAA,MAAUA;AAAAA,OAAS;AAAA,KACvC,CAAA;AAGP,IAAA,MAAMX,IAAAA,GAAO,oBAAoBY,cAAAA,CAAe,MAAMb,IAACd,IAAAA,EAAI,EAAE,CAAC,CAAA;AAE9D,IAAA,IAAI4B,MAAAA,CAAAA,IAAAA,CAAYC,GAAAA,CAAIC,IAAAA,EAAM,OAAOf,IAAAA;AAEjC,IAAA,OAAOgB,OAAOhB,IAAAA,EAAM;AAAA,MAAEiB,GAAAA,EAAK;AAAA,KAAM,CAAA;AAAA,EACnC,CAAC,CAAA;AACH;;;;"}