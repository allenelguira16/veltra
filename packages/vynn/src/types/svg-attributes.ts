import { AriaAttributes, CoreAttributes, EventAttributes } from "./common-attribute";
import { JSX } from "./jsx";

export type SVGAttributes<T extends SVGElement = SVGElement> = CoreAttributes &
  EventAttributes<T> &
  AriaAttributes & {
    children?: JSX.Element;
    ref?: ((el: T) => void) | T;
    // SVG presentation attributes (partial list)
    alignmentBaseline?: string;
    baselineShift?: string;
    clip?: string;
    clipPath?: string;
    clipRule?: "nonzero" | "evenodd" | "inherit";
    color?: string;
    colorInterpolation?: string;
    colorInterpolationFilters?: string;
    colorProfile?: string;
    colorRendering?: string;
    cursor?: string;
    direction?: string;
    display?: string;
    dominantBaseline?: string;
    enableBackground?: string;
    fill?: string;
    fillOpacity?: number | string;
    fillRule?: "nonzero" | "evenodd" | "inherit";
    filter?: string;
    floodColor?: string;
    floodOpacity?: number | string;
    fontFamily?: string;
    fontSize?: number | string;
    fontSizeAdjust?: number | string;
    fontStretch?: string;
    fontStyle?: string;
    fontVariant?: string;
    fontWeight?: string;
    glyphOrientationHorizontal?: string;
    glyphOrientationVertical?: string;
    imageRendering?: string;
    kerning?: string;
    letterSpacing?: string | number;
    lightingColor?: string;
    markerEnd?: string;
    markerMid?: string;
    markerStart?: string;
    mask?: string;
    opacity?: number | string;
    overflow?: string;
    paintOrder?: string;
    pointerEvents?: string;
    shapeRendering?: string;
    stopColor?: string;
    stopOpacity?: number | string;
    stroke?: string;
    strokeDasharray?: string | number;
    strokeDashoffset?: string | number;
    strokeLinecap?: "butt" | "round" | "square";
    strokeLinejoin?: "arcs" | "bevel" | "miter" | "miter-clip" | "round";
    strokeMiterlimit?: number | string;
    strokeOpacity?: number | string;
    strokeWidth?: number | string;
    textAnchor?: string;
    textDecoration?: string;
    textRendering?: string;
    transform?: string;
    unicodeBidi?: string;
    vectorEffect?: string;
    visibility?: string;
    whiteSpace?: string;
    wordSpacing?: string | number;
    writingMode?: string;
    x?: number | string;
    y?: number | string;
    dx?: number | string;
    dy?: number | string;
    r?: number | string;
    rx?: number | string;
    ry?: number | string;
    cx?: number | string;
    cy?: number | string;
    d?: string;
    height?: number | string;
    width?: number | string;
    x1?: number | string;
    x2?: number | string;
    y1?: number | string;
    y2?: number | string;
    pathLength?: number | string;
    viewBox?: string;
    preserveAspectRatio?: string;
    xmlns?: string;
  };
