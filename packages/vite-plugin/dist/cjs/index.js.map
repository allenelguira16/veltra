{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { transform } from \"@babel/core\";\n// @ts-expect-error - not typed\nimport babelPluginTS from \"@babel/preset-typescript\";\nimport babelPluginVynn from \"@babel/preset-vynn\";\nimport { PluginOption } from \"vite\";\n\ntype VitePluginVynnOptions = {\n  ssr: boolean;\n};\n\n/**\n * vite plugin for vynn\n *\n * @returns The vite plugin.\n */\nexport default (options: VitePluginVynnOptions = { ssr: false }) => {\n  return {\n    name: \"vite-plugin-vynn\",\n    enforce: \"pre\",\n\n    transform(code, id) {\n      const [filename] = id.split(\"?\", 2);\n\n      if (/\\.(t|j)sx($|\\?)/.test(filename)) {\n        const result = transform(code, {\n          filename,\n          sourceMaps: true,\n          presets: [[babelPluginVynn, options], babelPluginTS],\n        });\n\n        if (result?.code) {\n          return {\n            code: result.code,\n            map: result.map,\n          };\n        }\n      }\n    },\n  } satisfies PluginOption;\n};\n"],"names":["index","options","code","id","filename","result","transform","babelPluginVynn","babelPluginTS"],"mappings":"uKAeAA,EAAe,CAACC,EAAiC,CAAE,IAAK,EAAM,KACrD,CACL,KAAM,mBACN,QAAS,MAET,UAAUC,EAAMC,EAAI,CAClB,KAAM,CAACC,CAAQ,EAAID,EAAG,MAAM,IAAK,CAAC,EAElC,GAAI,kBAAkB,KAAKC,CAAQ,EAAG,CACpC,MAAMC,EAASC,EAAAA,UAAUJ,EAAM,CAC7B,SAAAE,EACA,WAAY,GACZ,QAAS,CAAC,CAACG,EAAiBN,CAAO,EAAGO,CAAa,CACrD,CAAC,EAED,GAAIH,GAAQ,KACV,MAAO,CACL,KAAMA,EAAO,KACb,IAAKA,EAAO,GACd,CAEJ,CACF,CACF"}