{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import { createContext, JSX, store } from \"vynn\";\n\nexport type Route = {\n  path: string;\n  component?: () => JSX.Element;\n  children?: Route[];\n};\n\nexport type Location = {\n  pathname: string;\n  search: string;\n};\n\n// guard against SSR\nconst isServer = typeof window === \"undefined\";\n\nexport const location = store<Location>({\n  pathname: !isServer ? window.location.pathname : \"/\",\n  search: !isServer ? window.location.search : \"\",\n});\n\n// only register popstate listener on client\nif (!isServer) {\n  window.addEventListener(\"popstate\", () => {\n    location.pathname = window.location.pathname;\n    location.search = window.location.search;\n  });\n}\n\nexport function navigate(path: string) {\n  if (!isServer) {\n    history.pushState(null, \"\", path);\n    location.pathname = path;\n    location.search = window.location.search;\n  } else {\n    location.pathname = path;\n  }\n}\n\nexport function isActiveRoute(path: string, exact = true): boolean {\n  const current = location.pathname;\n  const currentParts = current.split(\"/\").filter(Boolean);\n  const targetParts = path.split(\"/\").filter(Boolean);\n\n  if (exact && currentParts.length !== targetParts.length) return false;\n  if (!exact && currentParts.length < targetParts.length) return false;\n\n  return targetParts.every((part, i) => {\n    return part.startsWith(\":\") || part === currentParts[i];\n  });\n}\n\nfunction matchRoute(\n  path: string,\n  routes: Route[],\n  basePath = \"\",\n): { chain: Route[]; params: Record<string, string> } | undefined {\n  const fullPath = (prefix: string, sub: string) => (prefix + \"/\" + sub).replace(/\\/+/g, \"/\");\n\n  const pathSegments = path.split(\"/\").filter(Boolean);\n\n  for (const route of routes) {\n    const fullRoutePath = fullPath(basePath, route.path);\n    const routeSegments = fullRoutePath.split(\"/\").filter(Boolean);\n\n    const params: Record<string, string> = {};\n    let matched = true;\n\n    for (let i = 0; i < routeSegments.length; i++) {\n      const routePart = routeSegments[i];\n      const pathPart = pathSegments[i];\n\n      if (routePart?.startsWith(\"*\")) {\n        const key = routePart.slice(1) || \"wildcard\";\n        params[key] = pathSegments.slice(i).join(\"/\");\n        return { chain: [route], params };\n      }\n\n      if (routePart?.startsWith(\":\")) {\n        if (!pathPart) {\n          matched = false;\n          break;\n        }\n        params[routePart.slice(1)] = pathPart;\n      } else if (routePart !== pathPart) {\n        matched = false;\n        break;\n      }\n    }\n\n    if (!matched) continue;\n\n    // ðŸ”‘ Give children a chance FIRST\n    if (route.children) {\n      const childMatch = matchRoute(path, route.children, fullRoutePath);\n      if (childMatch) {\n        return {\n          chain: [route, ...childMatch.chain],\n          params: { ...params, ...childMatch.params },\n        };\n      }\n    }\n\n    // If no child matched, exact-length match = valid\n    if (routeSegments.length === pathSegments.length) {\n      return { chain: [route], params };\n    }\n  }\n\n  // fallback: /* catch-all\n  const star = routes.find((r) => r.path.startsWith(\"*\"));\n  if (star) {\n    const key = star.path.slice(1) || \"wildcard\";\n    return { chain: [star], params: { [key]: pathSegments.join(\"/\") } };\n  }\n\n  return undefined;\n}\n\nexport const params = store<Record<string, string>>({});\n\nexport function Router({ url, routes }: { url?: string; routes: Route[] }) {\n  if (url) location.pathname = url;\n\n  return () => {\n    const matched = matchRoute(location.pathname, routes);\n\n    if (matched) {\n      const { chain, params: extractedParams } = matched;\n      for (const key in params) delete params[key];\n      Object.assign(params, extractedParams);\n\n      return buildComponentTree(chain);\n    }\n\n    for (const key in params) delete params[key];\n    return <></>;\n  };\n}\n\nconst [OutletProvider, outletContext] = createContext<() => JSX.Element>();\n\nexport function Outlet() {\n  const child = outletContext();\n\n  return child();\n}\n\nfunction buildComponentTree(chain: Route[]): JSX.Element {\n  // Start from the leaf\n  let element: () => JSX.Element = () => null;\n\n  for (let i = chain.length - 1; i >= 0; i--) {\n    const route = chain[i];\n    if (!route.component) continue;\n\n    const Comp = route.component;\n    const child = element;\n\n    element = () => (\n      <OutletProvider value={child}>\n        <Comp />\n      </OutletProvider>\n    );\n  }\n\n  return element();\n}\n\nexport function Link({\n  children,\n  href,\n  activeClass,\n  class: className,\n}: {\n  children: () => JSX.Element;\n  href: string;\n  activeClass?: string;\n  class?: string;\n}) {\n  return (\n    <a\n      href={href}\n      class={(className + (isActiveRoute(href) ? ` ${activeClass}` : \"\")).trim()}\n      onClick={(e) => {\n        if (!isServer) {\n          e.preventDefault();\n          navigate(href);\n        }\n      }}\n    >\n      {children()}\n    </a>\n  );\n}\n"],"names":["isServer","window","location","store","pathname","search","addEventListener","navigate","path","history","pushState","isActiveRoute","exact","currentParts","split","filter","Boolean","targetParts","length","every","part","i","startsWith","matchRoute","routes","basePath","fullPath","prefix","sub","replace","pathSegments","route","fullRoutePath","routeSegments","params","matched","routePart","pathPart","key","slice","join","chain","children","childMatch","star","find","r","Router","url","extractedParams","Object","assign","buildComponentTree","_jsx","_Fragment","OutletProvider","outletContext","createContext","Outlet","element","component","Comp","child","value","Link","href","activeClass","class","className","trim","onClick","e","preventDefault"],"mappings":"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"}