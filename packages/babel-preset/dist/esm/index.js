import f from"@babel/plugin-transform-react-jsx";import u from"node:path";import{fileURLToPath as E}from"node:url";import{declare as m}from"@babel/helper-plugin-utils";import*as e from"@babel/types";const g=u.dirname(E(import.meta.url)),_=m(o=>(o.assertVersion(7),{name:"log-jsx-plugin",visitor:{Program(n,i){if(i.filename?.includes(u.resolve(g,"../../../vynn")))return;let s=!1;if(n.get("body").forEach(r=>{r.isImportDeclaration()&&r.node.source.value==="vynn/jsx-runtime"&&r.node.specifiers.forEach(t=>{if(e.isImportSpecifier(t)){const l=t.imported;e.isIdentifier(l)&&l.name==="logJsx"&&(s=!0)}})}),!s){const r=e.importDeclaration([e.importSpecifier(e.identifier("logJsx"),e.identifier("logJsx"))],e.stringLiteral("vynn/jsx-runtime"));n.unshiftContainer("body",r)}},CallExpression(n){const i=n.get("callee");if(e.isMemberExpression(i.node)&&e.isIdentifier(i.node.object,{name:"console"})&&e.isIdentifier(i.node.property)){const s=n.node.arguments.map(r=>e.isJSXElement(r)||e.isJSXFragment(r)?e.callExpression(e.identifier("logJsx"),[r]):r);s.some((r,t)=>r!==n.node.arguments[t])&&(n.node.arguments=s)}}}})),S=m(o=>(o.assertVersion(7),{name:"loop-auto-wrap-plugin",pre(){const n=this.file.metadata;n.importedLoops=new Set,n.localLoops=new Set},visitor:{Program(n,i){const s=i.file.metadata,r=s.importedLoops,t=s.localLoops;n.get("body").forEach(l=>{l.isImportDeclaration()&&l.node.source.value==="vynn"&&l.node.specifiers.forEach(a=>{e.isImportSpecifier(a)&&e.isIdentifier(a.imported,{name:"loop"})&&r.add(a.local.name)}),l.isFunctionDeclaration()&&e.isIdentifier(l.node.id)&&t.add(l.node.id.name),l.isVariableDeclaration()&&l.node.declarations.forEach(a=>{e.isIdentifier(a.id)&&t.add(a.id.name)})})},CallExpression(n,i){const s=i.file.metadata,r=s.importedLoops,t=s.localLoops,l=n.get("callee");if(!l.isIdentifier())return;const a=l.node.name;if(r.has(a)&&!t.has(a)&&n.node.arguments.length===1){const d=n.node.arguments[0];!e.isArrowFunctionExpression(d)&&e.isExpression(d)&&(n.node.arguments[0]=e.arrowFunctionExpression([],d))}}}})),h=m(o=>{o.assertVersion(7);function n(i){const s=[];if(i.node.children.forEach((t,l)=>{if(e.isJSXText(t)){let a=t.value;(!a.includes(`
`)||a.trim()!=="")&&(l===0&&(a=a.trimStart()),l===i.node.children.length-1&&(a=a.trimEnd()),s.push(e.addComment(e.arrowFunctionExpression([],e.stringLiteral(a)),"leading","#__PURE__")))}else if(e.isJSXElement(t)||e.isJSXFragment(t))s.push(e.addComment(e.arrowFunctionExpression([],t),"leading","#__PURE__"));else if(e.isJSXExpressionContainer(t)&&!e.isJSXEmptyExpression(t.expression)){const a=t.expression;e.isStringLiteral(a)?s.push(a):s.push(e.addComment(e.arrowFunctionExpression([],a),"leading","#__PURE__"))}}),s.length===0)return;let r=s.length===1?s[0]:e.arrayExpression(s);e.isArrowFunctionExpression(r)||(r=e.addComment(e.arrowFunctionExpression([],r),"leading","#__PURE__")),i.node.children=[e.jsxExpressionContainer(r)]}return{name:"wrap-jsx-children-plugin",visitor:{JSXElement(i){n(i)},JSXFragment(i){n(i)}}}}),v=m(o=>(o.assertVersion(7),{name:"wrap-jsx-expression-plugin",visitor:{JSXOpeningElement(n){const i=n.node.attributes.map(s=>{if(!e.isJSXAttribute(s)||!s.value)return s;const r=e.isJSXIdentifier(s.name)?s.name.name:null;if(r==="ref"&&e.isJSXExpressionContainer(s.value)&&e.isIdentifier(s.value.expression)){const a=s.value.expression,d=e.identifier("elem"),c=e.assignmentExpression("=",a,d),x=e.addComment(e.arrowFunctionExpression([d],c),"leading","#__PURE__");return e.jsxAttribute(e.jsxIdentifier(r),e.jsxExpressionContainer(x))}let t=null;if(e.isStringLiteral(s.value)?t=s.value:e.isJSXExpressionContainer(s.value)&&(e.isJSXEmptyExpression(s.value.expression)||(t=s.value.expression)),t===null||r===null)return s;const l=e.addComment(e.arrowFunctionExpression([],t),"leading","#__PURE__");return e.jsxAttribute(e.jsxIdentifier(r),e.jsxExpressionContainer(l))});n.node.attributes=i},JSXExpressionContainer(n){const i=n.node.expression;if(e.isJSXEmptyExpression(i)||e.isFunction(i)||e.isArrowFunctionExpression(i)||e.isLiteral(i))return;const s=e.addComment(e.arrowFunctionExpression([],i),"leading","#__PURE__");n.replaceWith(e.jsxExpressionContainer(s))}}}));function p(o){return o?e.isJSXElement(o)||e.isJSXFragment(o)?!0:e.isConditionalExpression(o)?p(o.consequent)||p(o.alternate):e.isLogicalExpression(o)?p(o.left)||p(o.right):e.isArrayExpression(o)?o.elements.some(n=>n&&!e.isSpreadElement(n)?p(n):!1):!1:!1}const J=m(o=>(o.assertVersion(7),{name:"wrap-jsx-variables",visitor:{VariableDeclarator(n){const i=n.node.init;i&&p(i)&&!e.isArrowFunctionExpression(i)&&(n.node.init=e.arrowFunctionExpression([],i))},AssignmentExpression(n){const i=n.node.right;p(i)&&!e.isArrowFunctionExpression(i)&&(n.node.right=e.arrowFunctionExpression([],i))}}})),w=m(o=>(o.assertVersion(7),{name:"pure-jsx-calls-plugin",visitor:{CallExpression(n){const i=n.node.callee;e.isIdentifier(i)&&(i.name==="_jsx"||i.name==="_jsxs")&&e.addComment(n.node,"leading","#__PURE__")}}}));function C(o,n={ssr:!1}){return o.assertVersion(7),{plugins:[[f,{runtime:"automatic",importSource:n.ssr?"vynn/server":"vynn",jsx:"preserve"}],_,J,S,h,v,w]}}export{C as default};
//# sourceMappingURL=index.js.map
